// <auto-generated />
using System;
using LongBox.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LongBox.Data.Migrations
{
    [DbContext(typeof(LongBoxContext))]
    [Migration("20250130135508_extractZipFile")]
    partial class extractZipFile
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("LongBox.Core.Models.SettingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("LongBox.Data.Entities.CBZFileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasSubdirectories")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedsMetaData")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UnableToOpen")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CBZFiles");
                });

            modelBuilder.Entity("LongBox.Data.Entities.ComicEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CBZFileId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CBZFileId");

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("LongBox.Data.Entities.ComicEntity", b =>
                {
                    b.HasOne("LongBox.Data.Entities.CBZFileEntity", "CBZFile")
                        .WithMany()
                        .HasForeignKey("CBZFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CBZFile");
                });
#pragma warning restore 612, 618
        }
    }
}
